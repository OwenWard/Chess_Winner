---
title: "Model Checking"
author: Owen G. Ward
date: today
format: 
  # html:
  #   toc: true
  #   toc-location: left
  pdf
bibliography: refs.bib
---


The aim of this document is to summarise the current version 
of the model and describe some of the ways we have assessed the
suitability of this model to our data. This document should be self contained.

This is being updated now to show all players in the Box Data.

```{r setup}
#| include: false

knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE,
                      fig.width = 8, dev = "png",
                      fig.height = 5, dpi = 200)

library(tidyverse)
library(RcppRoll)
library(cmdstanr)
library(posterior)
library(bayesplot)
library(loo)
library(here)

options(mc.cores = parallel::detectCores())

theme_set(theme_bw())


prob_positive <- function(stan_draws, param = "beta") {
  all_draws <- as_draws_df(stan_draws)
  ndraws <- nrow(all_draws)
  as_tibble(all_draws) %>% 
  select(starts_with(param)) %>% 
  apply(2, function(x) sum(x>0)/ndraws)
}

read_player <- function(path, file){
  dat <- read_csv(file = paste0(data_path, file),
                  col_types = cols(UTCDate = col_date("%Y.%m.%d"),
                                   WhiteTitle = col_character(),
                                   BlackTitle = col_character(),
                                   WhiteElo = col_character(),
                                   BlackElo = col_character(),
                                   FEN = col_character())) %>% 
    select(Username, Event, White, Black, Result, UTCDate, UTCTime, 
           WhiteElo, BlackElo, Variant, TimeControl, Termination) %>% 
    mutate(WhiteElo = parse_number(if_else(WhiteElo == "?", NA, WhiteElo)),
           BlackElo = parse_number(if_else(BlackElo == "?", NA, BlackElo)))
  dat
}

get_hist <- function(user, games, prev_n) {
  hist_games <- games %>% 
    filter(White == user | Black == user) %>% 
    arrange(UTCDate, UTCTime) %>% 
    mutate(focal_white = ifelse(Username == White, 1, 0)) %>% 
    select(White:BlackElo, focal_white) %>% 
    mutate(focal_result = case_when(
      (focal_white == 1 & Result == "1-0") ~ 1,
      (focal_white == 0 & Result == "0-1") ~ 1,
      (Result == "1/2-1/2") ~ 0.5,
      .default = 0
    )) %>% 
    mutate(focal_win_prop = c(cumsum(focal_result[1:(prev_n - 1)])/(1:(prev_n -1)), 
                              roll_mean(focal_result, n = prev_n)))
  
  hist_games
}

```

## The current model

Based on @ding2021nhl, an initial model proposed was of the form

$$
P(y_{ij} = 1) = \frac{1}{1 + \exp(-(\alpha_j + \beta_j x_{ij} + \gamma z_{ij}))}
$$

where this is the probability of the **j-th focal player** 
winning their **i-th game**. Here:

- $\alpha_j$ is a player level random effect
- $\beta_j$ is a player level random effect, accounting for the win ratio $x_{ij}$
of the focal player over their previous $n$ games
- $\gamma$ is a fixed effect of game level coefficients (colour, difference
in ELO ranking)

We then partially pool the $\alpha$ and $\beta$ coefficients, so

$$
\alpha_j \sim \mathcal{N}(\mu_2, 1)
$$
$$
\mu_2 \sim \mathcal{N}(0, 1)
$$
$$
\tau_2 \sim \mathcal{N}(0, 1)
$$

and similarly


$$
\beta_j \sim \mathcal{N}(\mu_1, 1)
$$
$$
\mu_1 \sim \mathcal{N}(0, 1)
$$
$$
\tau_1 \sim \mathcal{N}(0, 1)
$$

We rescale the win ratio $x_{ij}$, by the average win ratio of
player $j$ across all 
games they play in the dataset.
This means $\beta_j$ captures how a players win
probability changes as their historic performance deviates from 
their overall average win ratio.

For $z_{ij}$ we incorporate 2 covariates, namely the colour of 
the focal player and the ELO difference between the focal 
player and their opponent. So that means we have 
$\gamma_1$, which tells us how the win probability changes in going
from black to white,
and $\gamma_2$ gives how the win probability changes as the focal player
has a better ELO than their opponent.

__These predictors are not currently rescaled__.


## Fitting this to Lichess Data

We fit this to some of the large lichess data. We consider only a subset 
of the players in a given rating range, due to time constraints.


### 1700-1900 Players, Bullet

We fit this to games from all players in the 1700-1900 range. 
We looked only at standard rated bullet games (no tournaments, etc),
which was 675k games, ranging from 500 - 128k games per player.
Fitting this model takes many hours on a computing cluster.

This results in the following estimated parameters.


```{r 17-19-bullet-global, fig.path = "figures/"}
fit <- readRDS(here("results/", "Full_Fits", "lichess1700-1900/", 
                    "all_rated_bullet_model.RDS"))

users <- readRDS(here("results/", "Full_Fits",
                      "lichess1700-1900/",
                      "users_bullet.RDS"))


mcmc_hist(fit$draws(variables = c("mu1", "mu2", "gamma1", "gamma2"))) +
  labs(title = "Global Parameters 17-19 Bullet",
       subtitle = "mu1 is Winner Effect, mu2 is Player Effect, Gamma1 is colour,
       Gamma2 is ELO Difference")


fit$summary(variables = c("mu1", "mu2", "gamma1", "gamma2"))


```


- Here the mean for $\mu_2$ is -0.0483, corresponding to a 48% chance of 
winning as black against an equally ranked opponent. This parameter
is not clearly different from 0 here. Posterior SD is large.

- $\gamma_1$ is estimated to be about 0.094, indicating that playing 
as white increases the win probability by 2.5%, holding other parameters 
fixed. Posterior SD is very small.

- $\gamma_2$ indicates that a 10 point ELO difference increases the win 
probability by about 1%, while a 100 ELO score difference 
increases the win probability by about 9%. Posterior SD is very small.

- The global estimate for $\mu_1$, the global winner effect, is 
around 0. Posterior SD is large here.



```{r winner-effects-17-19-bullet, fig.path = "figures/"}
#| fig-height: 9

players <- users
names(players) <- paste0("beta[", 1:length(users), "]")

player_labels <- as_labeller(players)

mcmc_hist(fit$draws("beta"),
          facet_args = list(labeller = player_labels, ncol = 5)) +
  labs(title = "Player Winner Effects 17-19 Bullet")
```



Here we see that there is a range of plausible winner effects for 
different players. 

- Some have posterior distributions which are only positive, some 
are only negative and some are centered around or near 0.


-The largest posterior mean here is 1.32. This is saying that if on
average you win 50% of your games, but have instead won 10 in a row, your
probability of winning the next would increase by ~16% over that baseline.
However most estimated effects are small, and most of these posterior
distributions contain 0.


```{r indiv-effects-17-19-bullet, fig.path = "figures/"}
#| fig-height: 9

names(players) <- paste0("alpha[", 1:length(users), "]")
player_labels <- as_labeller(players)
mcmc_hist(fit$draws("alpha"),
          facet_args = list(labeller = player_labels, ncol = 5)) +
  labs(title = "Individual Player Effects 17-19 Bullet")
```

- Most of the individual player effects are somewhat negative but
close to 0.

- Many are quite similar to the global parameter here.


### 2000-2200 Players


We fit this model also to all players rated between 2000 and 2200. 
With the same restrictions on the games this gives us 834k games.
We have between 1200 and 89k games for each of these players.


```{r global-effects-20-22-bullet, fig.path = "figures/"}

fit2 <- readRDS(here("results/", "Full_Fits", "lichess2000-2200/", 
                    "all_rated_bullet_model.RDS"))


mcmc_hist(fit2$draws(variables = c("mu1", "mu2", "gamma1", "gamma2"))) +
  labs(title = "Global Parameters 20-22 Bullet",
       subtitle = "mu1 is Winner Effect, mu2 is Player Effect, Gamma1 is colour,
       Gamma2 is ELO Difference")

users_20_22 <- readRDS(here("results/", "Full_Fits",
                      "lichess2000-2200/",
                      "users_bullet.RDS"))

fit2$summary(variables = c("mu1", "mu2", "gamma1", "gamma2"))

```



```{r winner-effects-20-22-bullet, fig.path = "figures/"}
#| fig-height: 9

players <- users_20_22
names(players) <- paste0("beta[", 1:length(users_20_22), "]")

player_labels <- as_labeller(players)

mcmc_hist(fit2$draws("beta"),
          facet_args = list(labeller = player_labels, ncol = 5)) +
  labs(title = "Player Winner Effects 20-22 Bullet")

```

```{r indiv-effects-20-22-bullet, fig.path = "figures/"}
#| fig-height: 9

names(players) <- paste0("alpha[", 1:length(users_20_22), "]")
player_labels <- as_labeller(players)
mcmc_hist(fit2$draws("alpha"),
          facet_args = list(labeller = player_labels, ncol = 5)) +
  labs(title = "Individual Player Effects, 20-22 Bullet")
```

<!-- - Here the effect of a difference in ranking appears to be slightly larger. -->
<!-- This leads to a bigger change in the win probability when the difference -->
<!-- in ranking between the two players is larger. -->

<!-- - The posterior standard deviations of the $\mu$ parameters is slightly -->
<!-- larger in this model, but this could be explained by the smaller number of  -->
<!-- games. -->

<!-- - A smaller sample, but half of these posterior distributions  -->
<!-- of the winner effects contain 0. -->

### 2300-2500 Players 


We look at all players rated between 2300 and 2500. This gives us 703k games,
with players playing 400-74k games. 

```{r global-effects-23-25-bullet, fig.path = "figures/"}
fit3 <- readRDS(here("results/", "Full_Fits", "lichess2300-2500/", 
                    "all_rated_bullet_model.RDS"))


users_23_25 <- readRDS(here("results/", "Full_Fits",
                      "lichess2300-2500/",
                      "users_bullet.RDS"))

mcmc_hist(fit3$draws(variables = c("mu1", "mu2", "gamma1", "gamma2"))) +
  labs(title = "Global Parameters 23-25 Bullet",
       subtitle = "mu1 is Winner Effect, mu2 is Player Effect, Gamma1 is colour,
       Gamma2 is ELO Difference")

fit3$summary(variables = c("mu1", "mu2", "gamma1", "gamma2"))
```


```{r winner-effects-23-25-bullet, fig.path = "figures/"}
#| fig-height: 9

players <- users_23_25
names(players) <- paste0("beta[", 1:length(users_23_25), "]")

player_labels <- as_labeller(players)

mcmc_hist(fit3$draws("beta"),
          facet_args = list(labeller = player_labels, ncol = 5)) +
  labs(title = "Player Winner Effects 23-25 Bullet")


```


```{r indiv-effects-23-25-bullet, fig.path = "figures/"}
#| fig-height: 9

names(players) <- paste0("alpha[", 1:length(users_23_25), "]")
player_labels <- as_labeller(players)
mcmc_hist(fit3$draws("alpha"),
          facet_args = list(labeller = player_labels, ncol = 5)) +
  labs(title = "Individual Player Effects 23-25 Bullet")
```


## Repeating for Blitz Games

### 1700-1900

Note that now there are 187k games here, considerably fewer than 
the number of bullet games played. This ranges from 35k games to 8 players
who play less than 25 blitz games.

```{r global-effects-17-19-blitz, fig.path = "figures/"}

fit_blitz <- readRDS(here("results/", "Full_Fits", "lichess1700-1900/", 
                    "all_rated_blitz_model.RDS"))


mcmc_hist(fit_blitz$draws(variables = c("mu1", "mu2", "gamma1", "gamma2"))) +
  labs(title = "Global Parameters 17-19 Blitz",
       subtitle = "mu1 is Winner Effect, mu2 is Player Effect, Gamma1 is colour,
       Gamma2 is ELO Difference")


fit_blitz$summary(variables = c("mu1", "mu2", "gamma1", "gamma2"))
```


```{r winner-effects-17-19-blitz, fig.path = "figures/"}
#| fig-height: 9

## winner effects
players <- users
names(players) <- paste0("beta[", 1:length(users), "]")

player_labels <- as_labeller(players)

mcmc_hist(fit_blitz$draws("beta"),
          facet_args = list(labeller = player_labels, ncol = 5)) +
  labs(title = "Player Winner Effects, 17-19 Blitz")

```


```{r indiv-effects-17-19-blitz, fig.path = "figures/"}
#| fig-height: 9

## indiv effects
names(players) <- paste0("alpha[", 1:length(users), "]")
player_labels <- as_labeller(players)
mcmc_hist(fit_blitz$draws("alpha"),
          facet_args = list(labeller = player_labels, ncol = 5)) +
  labs(title = "Individual Player Effects 17-19 Blitz")
```

### 2000-2200

Here we have 250k games, ranging from 64k to 16 per player.

```{r global-effects-20-22-blitz, fig.path = "figures/"}
#| fig-height: 9

fit2_blitz <- readRDS(here("results/", "Full_Fits", "lichess2000-2200/", 
                    "all_rated_blitz_model.RDS"))


mcmc_hist(fit2_blitz$draws(variables = c("mu1", "mu2", "gamma1", "gamma2"))) +
  labs(title = "Global Parameters 20-22 Blitz",
       subtitle = "mu1 is Winner Effect, mu2 is Player Effect, Gamma1 is colour,
       Gamma2 is ELO Difference")


fit2_blitz$summary(variables = c("mu1", "mu2", "gamma1", "gamma2"))

```


```{r winner-effects-20-22-blitz, fig.path= "figures/"}
#| fig-height: 9

## winner effects
players <- users_20_22
names(players) <- paste0("beta[", 1:length(users_20_22), "]")

player_labels <- as_labeller(players)

mcmc_hist(fit2_blitz$draws("beta"),
          facet_args = list(labeller = player_labels, ncol = 5)) +
  labs(title = "Player Winner Effects 20-22 Blitz")

```



```{r indiv-effects-20-22-blitz, fig.path = "figures/"}
#| fig-height: 9

## indiv effects
names(players) <- paste0("alpha[", 1:length(users_20_22), "]")
player_labels <- as_labeller(players)
mcmc_hist(fit2_blitz$draws("alpha"),
          facet_args = list(labeller = player_labels, ncol = 5)) +
  labs(title = "Individual Player Effects 20-22 Blitz")

```

Only have limited comparison for these at the moment, so skipped for now.


### 2300-2500

Here we have only 82k total games, ranging from 15k to 16 games per player.

```{r global-effects-23-25-blitz, fig.path = "figures/"}
#| fig-height: 9

fit3_blitz <- readRDS(here("results/", "Full_Fits", "lichess2300-2500/", 
                    "all_rated_blitz_model.RDS"))

mcmc_hist(fit3_blitz$draws(variables = c("mu1", "mu2", "gamma1", "gamma2"))) +
  labs(title = "Global Parameters 23-25 Blitz",
       subtitle = "mu1 is Winner Effect, mu2 is Player Effect, Gamma1 is colour,
       Gamma2 is ELO Difference")


fit3_blitz$summary(variables = c("mu1", "mu2", "gamma1", "gamma2"))

```


```{r winner-effects-23-25-blitz, fig.path = "figures/"}
#| fig-height: 9

## winner effects
players <- users_23_25
names(players) <- paste0("beta[", 1:length(users_23_25), "]")

player_labels <- as_labeller(players)

mcmc_hist(fit3_blitz$draws("beta"),
          facet_args = list(labeller = player_labels, ncol = 5)) +
  labs(title = "Player Winner Effects, 23-25 Blitz")

```



```{r indiv-effects-23-25-blitz, fig.path = "figures/"}
#| fig-height: 9


## indiv effects
names(players) <- paste0("alpha[", 1:length(users_23_25), "]")
player_labels <- as_labeller(players)
mcmc_hist(fit3_blitz$draws("alpha"),
          facet_args = list(labeller = player_labels, ncol = 5)) +
  labs(title = "Individual Player Effects, 23-25 Blitz")

```


## Alternative Model

The alternative model is to use only the previous game as history, 
ignoring all other games. This is perhaps more susceptible to 
issues with correlation, which we will need to discuss further.

We will only consider this for the bullet games for now.

### 1700-1900 Bullet

```{r 17-19-bullet-prev-global, fig.path = "figures/" }

fit_prev <- readRDS(here("results/", "Full_Fits", "lichess1700-1900/", 
                    "all_rated_bullet_model_prev.RDS"))


mcmc_hist(fit_prev$draws(variables = c("mu1", "mu2", "gamma1", "gamma2"))) +
  labs(title = "Global Parameters, 17-19 Bullet Previous",
       subtitle = "mu1 is Winner Effect, mu2 is Player Effect, Gamma1 is colour,
       Gamma2 is ELO Difference")


fit_prev$summary(variables = c("mu1", "mu2", "gamma1", "gamma2"))
```


```{r 17-19-bullet-prev-winner, fig.path= "figures/"}
#| fig-height: 9

## winner effects
players <- users
names(players) <- paste0("delta[", 1:length(users), "]")

player_labels <- as_labeller(players)

mcmc_hist(fit_prev$draws("delta"),
          facet_args = list(labeller = player_labels, ncol = 5)) +
  labs(title = "Player Winner Effects, 17-19 Bullet Previous")
```


```{r 17-19-bullet-prev-indiv, fig.path="figures/"}
#| fig-height: 9

## indiv effects
names(players) <- paste0("alpha[", 1:length(users), "]")
player_labels <- as_labeller(players)
mcmc_hist(fit_prev$draws("alpha"),
          facet_args = list(labeller = player_labels, ncol = 5)) +
  labs(title = "Individual Player Effects, 17-19 Bullet Previous")
```


### 2000-2200 Bullet

```{r 20-22-bullet-prev-global, fig.path="figures/"}
fit2_prev <- readRDS(here("results/", "Full_Fits", "lichess2000-2200/", 
                    "all_rated_bullet_model_prev.RDS"))


mcmc_hist(fit2_prev$draws(variables = c("mu1", "mu2", "gamma1", "gamma2"))) +
  labs(title = "Global Parameters 20-22 Bullet Previous",
       subtitle = "mu1 is Winner Effect, mu2 is Player Effect, Gamma1 is colour,
       Gamma2 is ELO Difference")


fit2_prev$summary(variables = c("mu1", "mu2", "gamma1", "gamma2"))
```


```{r 20-22-bullet-prev-winner, fig.path="figures/"}
#| fig-height: 9


## winner effects
players <- users_20_22
names(players) <- paste0("delta[", 1:length(users_20_22), "]")

player_labels <- as_labeller(players)

mcmc_hist(fit2_prev$draws("delta"),
          facet_args = list(labeller = player_labels, ncol = 5)) +
  labs(title = "Player Winner Effects 20-22 Bullet Previous")
```


```{r 20-22-bullet-prev-indiv, fig.path="figures/"}
#| fig-height: 9

## indiv effects
names(players) <- paste0("alpha[", 1:length(users_20_22), "]")
player_labels <- as_labeller(players)
mcmc_hist(fit2_prev$draws("alpha"),
          facet_args = list(labeller = player_labels, ncol = 5)) +
  labs(title = "Individual Player Effects 20-22 Bullet Previous")
```

### 2300-2500 Bullet

```{r 23-25-bullet-prev-global, fig.path="figures/"}
fit3_prev <- readRDS(here("results/", "Full_Fits", "lichess2300-2500/", 
                    "all_rated_bullet_model_prev.RDS"))


mcmc_hist(fit3_prev$draws(variables = c("mu1", "mu2", "gamma1", "gamma2"))) +
  labs(title = "Global Parameters 23-25 Bullet Previous",
       subtitle = "mu1 is Winner Effect, mu2 is Player Effect, Gamma1 is colour,
       Gamma2 is ELO Difference")


fit3_prev$summary(variables = c("mu1", "mu2", "gamma1", "gamma2"))
```


```{r 23-25-bullet-prev-winner, fig.path="figures/"}
#| fig-height: 9

## winner effects
players <- users_23_25
names(players) <- paste0("delta[", 1:length(users_23_25), "]")

player_labels <- as_labeller(players)

mcmc_hist(fit3_prev$draws("delta"),
          facet_args = list(labeller = player_labels, ncol = 5)) +
  labs(title = "Player Winner Effects 23-25 Bullet Previous")

```


```{r 23-25-bullet-prev-indiv, fig.path="figures/"}
#| fig-height: 9

## indiv effects
names(players) <- paste0("alpha[", 1:length(users_23_25), "]")
player_labels <- as_labeller(players)
mcmc_hist(fit3_prev$draws("alpha"),
          facet_args = list(labeller = player_labels, ncol = 5)) +
  labs(title = "Individual Player Effects 23-25 Bullet Previous")
```


<!-- ### 1700-1900 Blitz -->

<!-- ```{r} -->
<!-- fit <- readRDS(here("results/", "Full_Fits", "lichess1700-1900/",  -->
<!--                     "all_rated_blitz_model_prev.RDS")) -->


<!-- mcmc_hist(fit$draws(variables = c("mu1", "mu2", "gamma1", "gamma2"))) + -->
<!--   labs(title = "Global Parameters", -->
<!--        subtitle = "mu1 is Winner Effect, mu2 is Player Effect, Gamma1 is colour, -->
<!--        Gamma2 is ELO Difference") -->


<!-- fit$summary(variables = c("mu1", "mu2", "gamma1", "gamma2")) -->


<!-- ## winner effects -->
<!-- players <- users -->
<!-- names(players) <- paste0("delta[", 1:length(users), "]") -->

<!-- player_labels <- as_labeller(players) -->

<!-- mcmc_hist(fit$draws("delta"), -->
<!--           facet_args = list(labeller = player_labels)) + -->
<!--   labs(title = "Player Winner Effects") -->


<!-- ## indiv effects -->
<!-- names(players) <- paste0("alpha[", 1:length(users), "]") -->
<!-- player_labels <- as_labeller(players) -->
<!-- mcmc_hist(fit$draws("alpha"), -->
<!--           facet_args = list(labeller = player_labels)) + -->
<!--   labs(title = "Individual Player Effects") -->
<!-- ``` -->


<!-- ### 2000-2200 Blitz -->

<!-- ```{r} -->
<!-- fit2 <- readRDS(here("results/", "Full_Fits", "lichess2000-2200/",  -->
<!--                     "all_rated_blitz_model_prev.RDS")) -->


<!-- mcmc_hist(fit2$draws(variables = c("mu1", "mu2", "gamma1", "gamma2"))) + -->
<!--   labs(title = "Global Parameters", -->
<!--        subtitle = "mu1 is Winner Effect, mu2 is Player Effect, Gamma1 is colour, -->
<!--        Gamma2 is ELO Difference") -->


<!-- fit2$summary(variables = c("mu1", "mu2", "gamma1", "gamma2")) -->


<!-- ## winner effects -->
<!-- players <- users_20_22 -->
<!-- names(players) <- paste0("delta[", 1:length(users_20_22), "]") -->

<!-- player_labels <- as_labeller(players) -->

<!-- mcmc_hist(fit2$draws("delta"), -->
<!--           facet_args = list(labeller = player_labels)) + -->
<!--   labs(title = "Player Winner Effects") -->


<!-- ## indiv effects -->
<!-- names(players) <- paste0("alpha[", 1:length(users_20_22), "]") -->
<!-- player_labels <- as_labeller(players) -->
<!-- mcmc_hist(fit2$draws("alpha"), -->
<!--           facet_args = list(labeller = player_labels)) + -->
<!--   labs(title = "Individual Player Effects") -->
<!-- ``` -->


<!-- ### 2300-2500 Blitz -->

<!-- ```{r} -->
<!-- fit3 <- readRDS(here("results/", "Full_Fits", "lichess2300-2500/",  -->
<!--                     "all_rated_blitz_model_prev.RDS")) -->


<!-- mcmc_hist(fit3$draws(variables = c("mu1", "mu2", "gamma1", "gamma2"))) + -->
<!--   labs(title = "Global Parameters", -->
<!--        subtitle = "mu1 is Winner Effect, mu2 is Player Effect, Gamma1 is colour, -->
<!--        Gamma2 is ELO Difference") -->


<!-- fit3$summary(variables = c("mu1", "mu2", "gamma1", "gamma2")) -->


<!-- ## winner effects -->
<!-- players <- users_23_25 -->
<!-- names(players) <- paste0("delta[", 1:length(users_23_25), "]") -->

<!-- player_labels <- as_labeller(players) -->

<!-- mcmc_hist(fit3$draws("delta"), -->
<!--           facet_args = list(labeller = player_labels)) + -->
<!--   labs(title = "Player Winner Effects") -->


<!-- ## indiv effects -->
<!-- names(players) <- paste0("alpha[", 1:length(users_23_25), "]") -->
<!-- player_labels <- as_labeller(players) -->
<!-- mcmc_hist(fit3$draws("alpha"), -->
<!--           facet_args = list(labeller = player_labels)) + -->
<!--   labs(title = "Individual Player Effects") -->
<!-- ``` -->


## Other Questions of Interest

- How much do player ratings change across their games?

We can look at this for a sample of players, from the 2300-2500 category.

```{r elo-change-23-25-bullet, fig.path = "figures/"}


## load in the data for this

path_id <- 3

all_data_path <- rep(NA, 3)
all_save_path <- rep(NA, 3)
all_data_path[1] <- here("box_data/lichess1700-1900/")
all_data_path[2] <- here("box_data/lichess2000-2200/")
all_data_path[3] <- here("box_data/lichess2300-2500/")

data_path <- all_data_path[path_id]
files <- list.files(data_path)

lichess_data <- files %>% 
  map_dfr(~read_player(data_path, .x))




## restrict to rated rapid and shorter here
## this also removes the NAs, which makes sense

small_data <- lichess_data %>%
  # filter(Event == "Rated Bullet game") %>%
  # filter(TimeControl == "60+0") %>%
  filter(Variant == "Standard") %>%
  filter(grepl("Rated Bullet game", Event))


users <- unique(small_data$Username)

small_data$dttm <- as.POSIXct(paste(small_data$UTCDate, small_data$UTCTime),
                              format="%Y-%m-%d %H:%M:%S", tz = "UTC")


small_data %>% 
  mutate(UserELO = ifelse(Username == White, WhiteElo, BlackElo)) %>% 
  group_by(Username) %>% 
  arrange(UTCDate, UTCTime, .by_group = TRUE) %>% 
  select(Username, dttm, UserELO) %>% 
  filter(Username %in% users[1:16]) %>% 
  # slice_sample(n = 100) %>% 
  ggplot(aes(dttm, UserELO, colour = as.factor(Username))) +
  geom_line() +
  labs(colour = "User", x = "Date") +
  geom_hline(yintercept = c(2300, 2500), 
             col = "red", linetype = "dashed", alpha = 0.5) +
  facet_wrap(~Username, scales = "free")

```


Each player by default starts with a rating of 1500.
Note that there is a lot of variability in how much time (and how many games)
each user has played at the "Ratings Bin" they are assigned to. Given
that current opponents are based only on your current rating, this 
should likely be accounted for. A player who has played many 
games where their rating is above 2300 should be different 
to a player playing their first game after attaining that
rating. How do we account for this in the model?

```{r elo-change-17-19-bullet, fig.path= "figures/"}
## look at different bin
path_id <- 1
data_path <- all_data_path[path_id]
files <- list.files(data_path)

lichess_data <- files %>% 
  map_dfr(~read_player(data_path, .x))

## restrict to rated rapid and shorter here
## this also removes the NAs, which makes sense

bullet_data <- lichess_data %>%
  # filter(Event == "Rated Bullet game") %>%
  # filter(TimeControl == "60+0") %>%
  filter(Variant == "Standard") %>%
  filter(grepl("Rated Bullet game", Event))


users <- unique(bullet_data$Username)


bullet_data %>% 
  mutate(UserELO = ifelse(Username == White, WhiteElo, BlackElo)) %>% 
  group_by(Username) %>% 
  arrange(UTCDate, UTCTime, .by_group = TRUE) %>% 
  select(Username, UTCDate, UTCTime, UserELO) %>% 
  slice(c(1, n()))
```


- How could we control for the experience of a player here? Would this
impact the presence of these winner effects?

- Could control for number of games played maybe?



## Change in winner effects across games

- Is there evidence for different winner effects in (say)
the first 1000 games played, vs the last 1000 games played?



## Relationship between winner effects and change in rating/average rating

```{r}
path_id <- 1
data_path <- all_data_path[path_id]
files <- list.files(data_path)

lichess_data <- files %>% 
  map_dfr(~read_player(data_path, .x))
```




<!-- ## Old Questions -->

<!-- Do focal players play each other in this data? -->

<!-- ```{r} -->
<!-- data_path <- here("box_data/lichess1700-1900/") -->

<!-- files <- list.files(data_path) -->
<!-- files <- files[1:25] -->

<!-- read_player <- function(path, file){ -->
<!--   dat <- read_csv(file = paste0(data_path, file), -->
<!--                   col_types = cols(UTCDate = col_date("%Y.%m.%d"), -->
<!--                                    WhiteTitle = col_character(), -->
<!--                                    BlackTitle = col_character(), -->
<!--                                    WhiteElo = col_character(), -->
<!--                                    BlackElo = col_character(), -->
<!--                                    FEN = col_character())) %>%  -->
<!--     select(Username, Event, White, Black, Result, UTCDate, UTCTime,  -->
<!--            WhiteElo, BlackElo, Variant, TimeControl, Termination) %>%  -->
<!--     mutate(WhiteElo = parse_number(if_else(WhiteElo == "?", NA, WhiteElo)), -->
<!--            BlackElo = parse_number(if_else(BlackElo == "?", NA, BlackElo))) -->
<!--   dat -->
<!-- } -->


<!-- lichess_data <- files %>%  -->
<!--   map_dfr(~read_player(data_path, .x)) -->


<!-- users <- unique(lichess_data$Username) -->


<!-- overlap_data <- lichess_data %>%  -->
<!--   filter(White %in% users & Black %in% users) %>%  -->
<!--   filter(Variant == "Standard") %>%  -->
<!--   filter(grepl("Rated Bullet game", Event)) -->

<!-- rm(lichess_data) -->

<!-- overlap_data %>% group_by(Username) %>%  -->
<!--   tally() %>%  -->
<!--   arrange(-n) -->
<!-- ``` -->

<!-- Certain players have a large amount of overlap, looking only at the games we -->
<!-- consider in the analysis. How should these games be accounted for? -->


<!-- ```{r check for 2000-2200 games also} -->
<!-- #| eval: false -->

<!-- ## happens here also, but not as often for this sample -->

<!-- data_path <- here("box_data/lichess2000-2200/") -->

<!-- files <- list.files(data_path) -->
<!-- files <- files[1:10] -->

<!-- read_player <- function(path, file){ -->
<!--   dat <- read_csv(file = paste0(data_path, file), -->
<!--                   col_types = cols(UTCDate = col_date("%Y.%m.%d"), -->
<!--                                    WhiteTitle = col_character(), -->
<!--                                    BlackTitle = col_character(), -->
<!--                                    WhiteElo = col_character(), -->
<!--                                    BlackElo = col_character(), -->
<!--                                    FEN = col_character())) %>%  -->
<!--     select(Username, Event, White, Black, Result, UTCDate, UTCTime,  -->
<!--            WhiteElo, BlackElo, Variant, TimeControl, Termination) %>%  -->
<!--     mutate(WhiteElo = parse_number(if_else(WhiteElo == "?", NA, WhiteElo)), -->
<!--            BlackElo = parse_number(if_else(BlackElo == "?", NA, BlackElo))) -->
<!--   dat -->
<!-- } -->


<!-- lichess_data <- files %>%  -->
<!--   map_dfr(~read_player(data_path, .x)) -->


<!-- users <- unique(lichess_data$Username) -->


<!-- overlap_data <- lichess_data %>%  -->
<!--   filter(White %in% users & Black %in% users) %>%  -->
<!--   filter(Variant == "Standard") %>%  -->
<!--   filter(grepl("Rated Bullet game", Event)) -->

<!-- rm(lichess_data) -->

<!-- overlap_data %>% group_by(Username) %>%  -->
<!--   tally() %>%  -->
<!--   arrange(-n) -->


<!-- ``` -->


### Other Comments

- Model checking is hard for these large datasets

- Not easy to do the permutation fits for all games

- Hard to simulate fake data also

- Are we ignoring any covariates which could influence the model here?

- How do these effects change if we only look at games which were played 
directly before?




<!-- Below some ideas about posterior predictive checking, hard to currently  -->
<!-- consider for the larger datasets we're working with. -->

<!-- ## Posterior Predictive Checking -->


<!-- ## Permuting the Original Data -->

<!-- We can also use permutations of the data to examine how -->
<!-- robust these results are. -->

<!-- ### Global Permutation -->

<!-- The simplest permutation of our model would be to simply permute -->
<!-- all results at random and then process the data and refit this model. -->

<!-- ```{r} -->
<!-- perm_path <- here("owen", "cluster_scripts", "perm_outputs", "perm_outputs") -->


<!-- sims <- list.files(path = perm_path) -->

<!-- perm_results <- sims %>%  -->
<!--   map_dfr(~readRDS(here("owen", "cluster_scripts", -->
<!--                         "perm_outputs", "perm_outputs", -->
<!--                         .x))) %>%  -->
<!--   select(variable, mean, median, sim_id) -->


<!-- ## global parameters here -->


<!-- fit3_ave <- readRDS("../model_fits/init_model_n10.RDS") -->

<!-- orig <- fit3_ave$summary(c("alpha", "beta", "gamma1", "gamma2", "mu1", "mu2", -->
<!--                    "tau1", "tau2"))  -->

<!-- rm(fit3_ave)  -->

<!-- perm_results %>%  -->
<!--   filter(variable == "mu1") %>%  -->
<!--   ggplot(aes(mean)) + -->
<!--   geom_histogram() + -->
<!--   labs(title = "Permutations of Mu_1", -->
<!--        subtitle = "True data appears different", -->
<!--        x = "mu1") + -->
<!--   geom_vline(data = orig %>%  -->
<!--                filter(variable == "mu1"), -->
<!--              aes(xintercept = mean), col = "red") -->

<!-- perm_results %>%  -->
<!--   filter(variable == "mu2") %>%  -->
<!--   ggplot(aes(mean)) + -->
<!--   geom_histogram() + -->
<!--   labs(title = "Permutations of Mu_2", -->
<!--        subtitle = "True data appears different", -->
<!--        x = "mu2") + -->
<!--   geom_vline(data = orig %>%  -->
<!--                filter(variable == "mu2"), -->
<!--              aes(xintercept = mean), col = "red") -->

<!-- ## try it also for some of the winner effects -->

<!-- perm_results %>%  -->
<!--   filter(variable == "gamma1") %>%  -->
<!--   ggplot(aes(mean)) + -->
<!--   geom_histogram() + -->
<!--   labs(title = "Permutations of gamma_1", -->
<!--        subtitle = "True data appears different", -->
<!--        x = "gamma_1") + -->
<!--   geom_vline(data = orig %>%  -->
<!--                filter(variable == "gamma1"), -->
<!--              aes(xintercept = mean), col = "red") -->



<!-- perm_results %>%  -->
<!--   filter(variable == "gamma2") %>%  -->
<!--   ggplot(aes(mean)) + -->
<!--   geom_histogram() + -->
<!--   labs(title = "Permutations of gamma_2", -->
<!--        subtitle = "True data appears different", -->
<!--        x = "gamma_2") + -->
<!--   geom_vline(data = orig %>%  -->
<!--                filter(variable == "gamma2"), -->
<!--              aes(xintercept = mean), col = "red") -->



<!-- perm_results %>%  -->
<!--   filter(variable == "tau1") %>%  -->
<!--   ggplot(aes(mean)) + -->
<!--   geom_histogram() + -->
<!--   labs(title = "Permutations of tau_1", -->
<!--        subtitle = "True data appears different", -->
<!--        x = "tau1") + -->
<!--   geom_vline(data = orig %>%  -->
<!--                filter(variable == "tau1"), -->
<!--              aes(xintercept = mean), col = "red") -->


<!-- perm_results %>%  -->
<!--   filter(variable == "tau2") %>%  -->
<!--   ggplot(aes(mean)) + -->
<!--   geom_histogram() + -->
<!--   labs(title = "Permutations of tau_2", -->
<!--        subtitle = "True data appears different", -->
<!--        x = "tau_2") + -->
<!--   geom_vline(data = orig %>%  -->
<!--              filter(variable == "tau2"), -->
<!--              aes(xintercept = mean), col = "red") -->


<!-- ``` -->


<!-- This quick permutation seem to indicate that there is evidence for these  -->
<!-- effects, which is not present when the results are randomly permuted  -->
<!-- instead. -->


<!-- Now we can look at the permutation distributions of $\alpha$. These are -->
<!-- centered at $\mu_2$ with standard deviation $\tau_2$. -->
<!-- As expected, all permutation distributions are essentially  -->
<!-- draws from the the global mean player effect, which corresponds to some  -->
<!-- overall number of games won. -->
<!-- Most of the estimates fall in these permutation distributions, essentially -->
<!-- indicating that the individual effect is the same as the global effect for these -->
<!-- players.  -->
<!-- For the players with a smaller effect, they are less likely to win -->
<!-- then the overall average, while players with a larger effect are more likely to -->
<!-- win. -->

<!-- I suspect the jumpy nature of these permutation distributions would -->
<!-- disappear if more permutations were considered. -->


<!-- ```{r repeat for all alpha} -->

<!-- alpha_var <- paste0("alpha[", 1:18, "]") -->

<!-- # alpha_var -->

<!-- for(i in seq_along(alpha_var)){ -->
<!--   plot_curr <- perm_results %>%  -->
<!--   filter(variable == alpha_var[i]) %>%  -->
<!--   ggplot(aes(mean)) + -->
<!--   geom_histogram() + -->
<!--   labs(title = paste0("Permutations of ", alpha_var[i]), -->
<!--        subtitle = "True data appears different", -->
<!--        x = alpha_var[i]) + -->
<!--   geom_vline(data = orig %>%  -->
<!--              filter(variable == alpha_var[i]), -->
<!--              aes(xintercept = mean), col = "red") -->
<!--   print(plot_curr) -->
<!-- } -->

<!-- ``` -->

<!-- Given this global permutation of all game results, if we look at the  -->
<!-- winner effect, we should expect to not see any evidence for these under -->
<!-- the permutation distribution. The individual effects have mean $\mu_1$  -->
<!-- and sd $\tau_1$. Note that these $\beta$ estimates under the  -->
<!-- original data, which correspond to to winner and loser effects, appear -->
<!-- to have stronger evidence under this permutation. Almost all of these are  -->
<!-- positive and the one negative estimate is likely not significant, based -->
<!-- on the posterior distribution anyway. -->



<!-- ```{r repeat for all beta} -->

<!-- beta_var <- paste0("beta[", 1:18, "]") -->

<!-- # alpha_var -->

<!-- for(i in seq_along(beta_var)){ -->
<!--   plot_curr <- perm_results %>%  -->
<!--   filter(variable == beta_var[i]) %>%  -->
<!--   ggplot(aes(mean)) + -->
<!--   geom_histogram() + -->
<!--   labs(title = paste0("Permutations of ", beta_var[i]), -->
<!--        subtitle = "True data appears different", -->
<!--        x = beta_var[i]) + -->
<!--   geom_vline(data = orig %>%  -->
<!--              filter(variable == beta_var[i]), -->
<!--              aes(xintercept = mean), col = "red") -->
<!--   print(plot_curr) -->
<!-- } -->

<!-- ``` -->

<!-- Are the estimates that are not centered around 0 explained by the  -->
<!-- overall proportion of wins in the dataset? When you permute all the results -->
<!-- you essentially get that 48% of games are won by a focal player playing -->
<!-- as black. This is basically $1/(1+\exp(-1(-0.1)))$. Note that the  -->
<!-- proportion is higher in the original data. -->


<!-- ```{r} -->
<!-- #| eval: true -->
<!-- #| echo: false -->


<!-- lichess_data <- readRDS("../../rdata/lichess_pilot.RData") -->

<!-- bullet_60 <- lichess_data %>%  -->
<!--   filter(Event == "Rated Bullet game") %>%  -->
<!--   filter(TimeControl == "60+0") %>%  -->
<!--   mutate(game_id = row_number())  -->

<!-- get_hist <- function(user, games, prev_n) { -->
<!--   hist_games <- games %>%  -->
<!--     filter(White == user | Black == user) %>%  -->
<!--     arrange(UTCDate, UTCTime) %>%  -->
<!--     mutate(focal_white = ifelse(Username == White, 1, 0)) %>%  -->
<!--     select(White:BlackElo, focal_white) %>%  -->
<!--     mutate(focal_result = case_when( -->
<!--       (focal_white == 1 & Result == "1-0") ~ 1, -->
<!--       (focal_white == 0 & Result == "0-1") ~ 1, -->
<!--       (Result == "1/2-1/2") ~ 0.5, -->
<!--       .default = 0 -->
<!--       )) %>%  -->
<!--     mutate(focal_win_prop = c(cumsum(focal_result[1:(prev_n - 1)])/(1:(prev_n -1)),  -->
<!--                               roll_mean(focal_result, n = prev_n))) -->

<!--   hist_games -->
<!-- } -->

<!-- focal_players <- head(sort(table(c(bullet_60$Username)), decreasing = TRUE), 18) -->


<!-- top_players <- names(focal_players) -->

<!-- tidy_games <- map_dfr(top_players, get_hist, bullet_60, prev_n = 10) %>%  -->
<!--   as_tibble() -->


<!-- init_data <- tidy_games %>%  -->
<!--   mutate(WhiteElo = as.numeric(WhiteElo),  -->
<!--          BlackElo = as.numeric(BlackElo)) %>%  -->
<!--   mutate(focal_user = ifelse(focal_white == 1, White, Black)) %>%  -->
<!--   mutate(elo_diff = ifelse(focal_white == 1,  -->
<!--                            WhiteElo - BlackElo, BlackElo - WhiteElo)) %>%  -->
<!--   mutate(focal_id = match(focal_user, top_players)) %>%  -->
<!--   select(focal_user, focal_id, focal_white,  -->
<!--          focal_win_prop, elo_diff, focal_result) %>%  -->
<!--   group_by(focal_id) %>%  -->
<!--   mutate(ave_prop = lag(focal_win_prop, default = 0) - mean(focal_win_prop)) %>%  -->
<!--   filter(focal_result != 0.5) -->

<!-- init_data %>% -->
<!--   group_by(focal_white, focal_result) %>% -->
<!--   tally() %>% -->
<!--   mutate(prop = n /sum(n)) -->
<!-- #  -->


<!-- ``` -->

<!-- ### Focal Player Permutation -->

<!-- Alternatively, we could restrict our permutations to  -->
<!-- instead be at the level of each focal player. This -->
<!-- means that the total number of games won by each focal -->
<!-- player will be the same, but any temporal -->
<!-- structure to these results will be removed. -->




<!-- ## Questions -->

<!-- - Are we ignoring any covariates which could influence the model here? -->

<!-- - How do these effects change if we only look at games which were played  -->
<!-- directly before? -->

